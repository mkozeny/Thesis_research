package main;

import java.util.Set;

import edu.mit.csail.sdg.annotations.Ensures;
import edu.mit.csail.sdg.annotations.Modifies;
import edu.mit.csail.sdg.annotations.Requires;
import edu.mit.csail.sdg.squander.*;

public class NQueensProblemSolver {

	private int n;

	private Cell[] cells;

	private int pointer;

	public NQueensProblemSolver(int n) {
		super();
		this.n = n;
		this.cells = new Cell[n];
		this.pointer = 0;
	}

	@Requires ( "result.length == n" )
	@Ensures ( {
	"all k : int | k>=0 && k<n => lone ( Cell@i ) . k" ,
	"all k : int | k>=0 && k<n => lone ( Cell@j ) . k" ,
	” a l l q1 : r e s u l t . e l t s | no q2 : r e s u l t . e l t s − q1 | ”+
	” q1 . i = q2 . i | | q1 . i −q1 . j = q2 . i −q2 . j | | q1 . j = q2 . j
	})
	@Modifies ({
	” C e l l . i [ ] [ ] [ { k : i n t | k>=0 && k<n } ] ” ,
	” C e l l . j [ ] [ ] [ { k : i n t | k>=0 && k<n } ] ”
	})
	public static void nqueens ( int n , Set<Cell> result ) {
		Squander.exe( null , n , result ) ;
	}


	public Cell[] getCells() {
		return this.cells;
	}
}
