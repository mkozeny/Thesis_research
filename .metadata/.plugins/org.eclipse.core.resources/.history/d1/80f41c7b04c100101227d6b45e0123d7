package main;

import edu.mit.csail.sdg.annotations.Ensures;
import edu.mit.csail.sdg.annotations.Modifies;
import edu.mit.csail.sdg.squander.Squander;
import edu.mit.csail.sdg.squander.annotations.FreshObjects;

public class KnapSack {

	private int capacity;
	
	private int n;
	
	private int [] v;
	
	private int [] c;

	public KnapSack(int capacity, int n) {
		super();
		this.capacity = capacity;
		this.n = n;
	}
	
	@Ensures({ "return[int] in (0|1)",
		"return.length = this.n ",
		"(sum i: int | return[i]*this.c[i]) > minCost",
		"(sum i: int | return[i]*this.v[i]) <= this.capacity"})
	@Modifies ({ "return.length" , "return.elems" })
	@FreshObjects ( cls = int[].class , num = 1 )
	public int [] solveKnapSackProblem(int minCost)
	{
		return Squander.exe(this, minCost);
	}
	
	public void setC(int[] c) {
		this.c = c;
	}
	public void setV(int[] v) {
		this.v = v;
	}
	
	
}

