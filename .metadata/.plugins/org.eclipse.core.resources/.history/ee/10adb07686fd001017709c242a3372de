package main;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.StringTokenizer;

public class Main {

	//private static final int capacity = 100;
	//private static final int n = 4;
	/**
	 * @param args
	 * @throws IOException 
	 */
	public static void main(String[] args) throws IOException {
		String inputTaskFile = "files/knap_4.txt";
		String inputResFile = "files/knap_4_res.txt";
		String outputFile = "files/knap_4_sol.txt";
		BufferedReader inTask = new BufferedReader(new FileReader(inputTaskFile));
		BufferedReader inResult = new BufferedReader(new FileReader(inputResFile));
		BufferedWriter out = new BufferedWriter(new FileWriter(outputFile));

		String inputLine = "";
		String inputResLine = "";
		while ((inputLine = inTask.readLine()) != null && (inputResLine = inResult.readLine()) != null) {
			Set<Thing> result = new HashSet<Thing>();
			StringTokenizer tokenizer = new StringTokenizer(inputLine," ");
			StringTokenizer tokenizerRes = new StringTokenizer(inputResLine," ");
			int capacity = 0 ;
			if(tokenizer.hasMoreElements())
				capacity = Integer.parseInt(tokenizer.nextToken());
			int pos = 1;
			while (tokenizer.hasMoreElements()) {
				result.add(new Thing(Integer.parseInt(tokenizer.nextToken()), Integer.parseInt(tokenizer.nextToken()),pos++));
			}
			int resCost = 0;
			if(tokenizer.hasMoreElements())
				resCost = Integer.parseInt(tokenizerRes.nextToken());
			//if(resCost>=510)
			//	continue;
			KnapSack kn = new KnapSack();
			try
			{
				kn.solveKnapSackProblem(result, result.size(), capacity, resCost-1);
				Collections.sort((List<Thing>) result);
				int price = 0;
				int weight = 0;
				for(Thing t:result)
				{
					if(t.isChoosed())
					{
						price+=t.getC();
						weight+=t.getV();
					}
					System.out.print((t.isChoosed()?1:0)+" ");
					out.write((t.isChoosed()?1:0)+" ");
				}
				System.out.println();
				System.out.println("PRICE: "+price);
				System.out.println("WEIGHT: "+weight);
				System.out.println("RESULT PRICE: "+resCost);
				out.write("PRICE: "+price +", WEIGHT: "+weight+"; "+inputResLine+ "\r\n");
			}catch(Exception e)
			{
				out.write("ERROR\r\n");
			}
		}
		inTask.close();
		inResult.close();
		out.close();
		

	}

}
