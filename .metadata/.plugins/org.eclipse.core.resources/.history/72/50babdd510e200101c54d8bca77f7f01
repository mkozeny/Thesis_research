package game;

import java.util.HashSet;
import java.util.Random;
import java.util.Set;

public class GameField {

	public GameField(int n) {
		super();
		this.gameField = new int [n-1][];
		this.n = n;
		this.followers = new HashSet<GameField>();
		this.m = (n+1)*(n+1)-3;
		Random random = new Random();
		int tmp  = random.nextInt(m-n);
		this.q = tmp==0?1:tmp;
		tmp  = random.nextInt(5);
		this.x = tmp==0?1:tmp;
	}

	private final int n;
	
	private final int m;
	
	private final int q;
	
	private final int x;
	
	private int [] [] gameField;
	
	private Set<GameField> followers;
	
	public void initGameField()
	{
		if(this.n > 1)
		{
			for(int i = 0; i < n -1 ; i++)
			{
				if(i == n - 2)
					this.gameField [i] = new int [2*(i+1) - 1];
				else
					this.gameField [i] = new int [2*(i+1) + 1];
			}
		}
	}
	
	public void generateGameField()
	{
		Random random = new Random();
		for(int i=0; i< (x+q+1); i++)
		{
			int row = random.nextInt(this.gameField.length-1);
			row = row==0?1:row;
			int column = random.nextInt(2*row);
		}
		for(int i=0; i< this.gameField.length; i++)
		{
			for(int j=0; i < this.gameField[i].length; j++)
			{
				
			}
		}
	}
}
